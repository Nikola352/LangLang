// <auto-generated />
using System;
using LangLang.Repositories.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LangLang.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240616173831_MigMapaFresh")]
    partial class MigMapaFresh
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LangLang.Domain.Model.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCreatedByTutor")
                        .HasColumnType("boolean");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumStudents")
                        .HasColumnType("integer");

                    b.Property<bool>("Online")
                        .HasColumnType("boolean");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScheduleSerialized")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("TutorId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LanguageName");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LangLang.Domain.Model.Exam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("ClassroomNumber")
                        .HasColumnType("integer");

                    b.Property<int>("ExamState")
                        .HasColumnType("integer");

                    b.Property<int>("LanguageLevel")
                        .HasColumnType("integer");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("integer");

                    b.Property<int>("NumStudents")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TutorId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LanguageName");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("LangLang.Domain.Model.Language", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("LangLang.Domain.Model.Course", b =>
                {
                    b.HasOne("LangLang.Domain.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("LangLang.Domain.Model.Exam", b =>
                {
                    b.HasOne("LangLang.Domain.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });
#pragma warning restore 612, 618
        }
    }
}
